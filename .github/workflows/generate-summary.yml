name: Scheduled Fetch

on:
  schedule:
    - cron: '0 2 * * *'  # Run at 2 AM every day
  workflow_dispatch:  # Allow manual trigger

jobs:
  fetch-and-generate-summary:
    runs-on: ubuntu-latest
    steps:
      - name: Send Request to Notion API
        uses: actionsflow/axios@v1
        id: fetch-notion
        with:
          url: https://api.notion.com/v1/databases/${{ secrets.DATABASE_ID }}/query
          method: 'POST'
          accept: 200
          headers: |
            {
              "Authorization": "Bearer ${{ secrets.NOTION_TOKEN }}",
              "Notion-Version": "2022-06-28",
              "Content-Type": "application/json"
            }
          data: |
            {
              "filter": {
                "property": "Tags",
                "multi_select": {
                  "contains": ""
                }
              },
              "sorts": [
                {
                  "property": "Created",
                  "direction": "descending"
                }
              ],
              "page_size": 1
            }

      - name: Process Response and Generate
        id: generate-summary
        if: success()
        run: |
          echo "API Response Content:"
          echo '${{ steps.fetch-notion.outputs.data }}' | jq '.'
          
          url=$(echo '${{ steps.fetch-notion.outputs.data }}' | jq -r '.results[0].properties.URL.url')
          echo "Extracted URL: $url"
          
          if [ -n "$url" ] && [ "$url" != "null" ]; then
            echo "url=$url" >> $GITHUB_OUTPUT
          else
            echo "Failed to get a valid URL from Notion response"
            echo "url=" >> $GITHUB_OUTPUT
          fi

      - name: Get Redirect URL
        if: success() && steps.generate-summary.outputs.url != ''
        uses: actionsflow/axios@v1
        id: get-redirect
        with:
          url: ${{ steps.generate-summary.outputs.url }}
          method: 'GET'
          accept: 200,301,302
          headers: '{ "Authorization": "Bearer ${{ secrets.NOTION_TOKEN }}" }'

      - name: Output URL
        if: success() && steps.get-redirect.outputs.headers
        run: |
          echo "Redirect Response Headers:"
          echo '${{ toJson(steps.get-redirect.outputs.headers) }}'
          
          location_header="${{ fromJson(steps.get-redirect.outputs.headers).location }}"
          if [ -n "$location_header" ]; then
            echo "URL: $location_header"
            echo "redirect_url=$location_header" >> $GITHUB_OUTPUT
          else
            echo "Failed to get redirect URL"
          fi

      - name: Display Summary URL
        if: success() && steps.get-redirect.outputs.redirect_url
        run: |
          echo "Summary URL: ${{ steps.get-redirect.outputs.redirect_url }}"
